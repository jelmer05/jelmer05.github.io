const a = function(t, r) {
  const e = {};
  for (const n in t) {
    const s = t[n];
    r.indexOf(n) > -1 && s !== null && (e[n] = s);
  }
  return e;
}, o = (t) => t === "email", c = () => ({
  singleTag: "hr"
}), u = () => ({
  tag: "blockquote"
}), i = () => ({
  tag: "ul"
}), l = (t) => ({
  tag: [
    "pre",
    {
      tag: "code",
      attrs: t.attrs
    }
  ]
}), g = () => ({
  singleTag: "br"
}), d = (t) => ({
  tag: `h${t.attrs.level}`
}), m = (t) => ({
  singleTag: [
    {
      tag: "img",
      attrs: a(t.attrs, ["src", "alt", "title"])
    }
  ]
}), h = () => ({
  tag: "li"
}), p = () => ({
  tag: "ol"
}), f = () => ({
  tag: "p"
}), k = (t) => ({
  tag: [
    {
      tag: "span",
      attrs: {
        ["data-type"]: "emoji",
        ["data-name"]: t.attrs.name
      }
    }
  ]
}), b = () => ({
  tag: "b"
}), y = () => ({
  tag: "strike"
}), _ = () => ({
  tag: "u"
}), T = () => ({
  tag: "strong"
}), $ = () => ({
  tag: "code"
}), j = () => ({
  tag: "i"
}), q = (t) => {
  const r = { ...t.attrs }, { linktype: e = "url" } = t.attrs;
  if (o(e) && (r.href = `mailto:${r.href}`), r.anchor && (r.href = `${r.href}#${r.anchor}`, delete r.anchor), r.custom) {
    for (const n in r.custom)
      r[n] = r.custom[n];
    delete r.custom;
  }
  return {
    tag: [
      {
        tag: "a",
        attrs: r
      }
    ]
  };
}, v = (t) => ({
  tag: [
    {
      tag: "span",
      attrs: t.attrs
    }
  ]
}), x = () => ({
  tag: "sub"
}), z = () => ({
  tag: "sup"
}), E = {
  nodes: {
    horizontal_rule: c,
    blockquote: u,
    bullet_list: i,
    code_block: l,
    hard_break: g,
    heading: d,
    image: m,
    list_item: h,
    ordered_list: p,
    paragraph: f,
    emoji: k
  },
  marks: {
    bold: b,
    strike: y,
    underline: _,
    strong: T,
    code: $,
    italic: j,
    link: q,
    styled: v,
    subscript: x,
    superscript: z
  }
};
export {
  E as default
};
