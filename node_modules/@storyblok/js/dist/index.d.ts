import { StoryblokRichTextNode, StoryblokRichTextOptions } from '@storyblok/richtext';
import { ISbStoryData, SbInitResult, SbSDKOptions, StoryblokBridgeConfigV2, StoryblokComponentType } from './types';
export interface StoryblokBridgeEvent {
    action: string;
    storyId: number;
    story: ISbStoryData;
}
export declare const useStoryblokBridge: <T extends StoryblokComponentType<string> = any>(id: number, cb: (newStory: ISbStoryData<T>) => void, options?: StoryblokBridgeConfigV2) => void;
export declare const storyblokInit: (pluginOptions?: SbSDKOptions) => SbInitResult;
/**
 * Render Rich Text
 * @param data - The rich text data to render
 * @param options - The options for the rich text
 * @returns The rendered rich text
 */
export declare function renderRichText<T = string>(data: StoryblokRichTextNode<T>, options?: StoryblokRichTextOptions<T>): T | undefined;
export declare const loadStoryblokBridge: () => Promise<unknown>;
export { useStoryblokBridge as registerStoryblokBridge };
export { default as apiPlugin } from './api';
export { default as storyblokEditable } from './editable';
export * from './types';
export { BlockTypes, MarkTypes, richTextResolver, type StoryblokRichTextDocumentNode, type StoryblokRichTextImageOptimizationOptions, type StoryblokRichTextNode, type StoryblokRichTextNodeResolver, type StoryblokRichTextNodeTypes, type StoryblokRichTextOptions, type StoryblokRichTextResolvers, TextTypes, } from '@storyblok/richtext';
